image: docker:19.03.12

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: "1.0"
  DOCKER_TLS_CERTDIR: "/certs"
  DEV_SERVER_IP: 65.2.167.182

services:
  - docker:19.03.12-dind

stages:          # List of stages for jobs, and their order of execution
  - build_image
  - deploy_arrivnow-dev
  # - deploy_arrivnow-sales-demo

docker-build-image:
  stage: build_image
  tags:
    - docker
    - java
  script:
    - docker info
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $IMAGE_NAME:$IMAGE_TAG
  when: always
  only: 
    - develop

deploy_to_dev:
  stage: deploy_arrivnow-dev
  tags:
    - docker
    - java
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
  script:
    - scp -o StrictHostKeyChecking=no -i ${SSH_PRIVATE_KEY} ./docker-compose.yaml ubuntu@${DEV_SERVER_IP}:/home/ubuntu
    - ssh -o StrictHostKeyChecking=no -i ${SSH_PRIVATE_KEY} ubuntu@${DEV_SERVER_IP} "
      docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} &&
      export COMPOSE_PROJECT_NAME=dev &&
      export DC_IAMGE_NAME=${CONTAINER_IMAGE} &&
      export DC_IMAGE_TAG=${VERSION} &&
      export DC_APP_PORT=3000 &&
      docker-compose -f docker-compose.yaml down &&
      docker-compose -f docker-compose.yaml up -d" 

  only: 
    - develop  


#stage: deploy_arrivnow-dev
  #needs: ["docker-build-image"]
  #image: vapprtech/awskubectl:latest
  #before_script:
    #- aws eks update-kubeconfig --name arrivnow-dev --region us-east-2 
  
    #- kubectl create namespace usermanagement  --dry-run=client -o yaml | kubectl apply -f -   
  #script:
     # - sed -i "s/latest/${CI_COMMIT_SHORT_SHA}/g" manifest/arrivnowdeployment.yaml
      #- kubectl apply -f manifest/*
      #- kubectl rollout restart deployment usermanagement -n usermanagement
      #- kubectl get pods -n usermanagement 
      #- kubectl get svc -n usermanagement -o wide
  #when: always
  #only: 
    #- develop

# deploy-arrivnow-sales-demo:
#   stage: deploy_arrivnow-sales-demo
#   #needs: ["docker-build-image"]
#   image: vapprtech/awskubectl:latest
#   before_script:
#     - aws eks update-kubeconfig --name arrivnow-sales-demo --region us-east-2 
#     #- export KUBECONFIG=$KUBECONFIG_FILE
#     - kubectl create namespace usermanagement  --dry-run=client -o yaml | kubectl apply -f -   
#   script:
#      # - sed -i "s/latest/${CI_COMMIT_SHORT_SHA}/g" manifest/arrivnowdeployment.yaml
#       - kubectl apply -f manifest/*
#       - kubectl rollout restart deployment usermanagement -n usermanagement
#       - kubectl get pods -n usermanagement 
#       - kubectl get svc -n usermanagement -o wide
#   when: always
#   only: 
#     - develop
